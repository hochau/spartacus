#项目基本信息
spring.application.name=spartacus
server.port = 80

#开启热部署
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.additional-paths=src/main/java
spring.devtools.restart.exclude=public/**,resources/**,static/**

#文件上传大小限制（单文件大小、单次总大小）
spring.http.multipart.max-file-size=50MB
spring.http.multipart.max-request-size=500MB

#这里必须手动关闭CGLIB动态代理，才能保证spring内部完全使用JDK动态代理，否则无法查看(/connect)绑定状态
spring.aop.proxy-target-class=false

#数据库配置
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.url= jdbc:mysql://127.0.0.1:3306/blog?useUnicode=yes&useSSL=false&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = root

##JPA相关配置
spring.jpa.database=MYSQL
#懒加载，否则无法实现动态更新
spring.jpa.open-in-view=true
#是否在控制台打印sql语句
spring.jpa.show-sql=true
#打印sql语句是否格式化
spring.jpa.properties.hibernate.format_sql=true
#是否自动生成/修改数据库表
spring.jpa.hibernate.ddl-auto=update
#指定Mysql方言
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#表名、字段名的映射规则（Cat->cat, catName->cat_name）
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

##连接池Druid配置
#连接池及重试配置，防止mysql超过8小时空闲自动断开链接问题
spring.datasource.druid.initial-size=3
spring.datasource.druid.min-idle=3
spring.datasource.druid.max-active=10
spring.datasource.druid.min-evictable-idle-time-millis=1800000
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.default-auto-commit=true
spring.datasource.druid.validation-query=select 1
#配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
#配置StatFilter，StatFilter提供监控数据
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
#监控后台的账户和密码(http://localhost:80/druid/login.html)
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=foobared
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000

#集群session存储方式(查看StoreType.class，默认是NONE)
spring.session.store-type = none
#如果上面配置是redis，则必须配置redis
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
#spring.redis.password=
#session超时时间至少是1分钟，因此这里就算小于60秒，也会被转化成1分钟
server.session.timeout = 3600

#开/关security
security.basic.enabled = true

#浏览器环境配置，参见BrowserProperties
imooc.security.browser.signInPage = /login.html
imooc.security.browser.signInResponseType = REDIRECT
imooc.security.browser.signInSuccessUrl=/index.html
imooc.security.browser.rememberMeSeconds=294000
#imooc.security.browser.signUpUrl = /signUp.html
imooc.security.browser.signOutUrl = /login.html

#session管理相关配置，参见SessionProperties
imooc.security.browser.session.maximumSessions=1
imooc.security.browser.session.maxSessionsPreventsLogin=false
imooc.security.browser.session.sessionInvalidUrl=/login.html

#图片验证码配置项，参见ImageCodeProperties
#imooc.security.code.image.length = 6
#imooc.security.code.image.width = 100
#imooc.security.code.image.height = 30
#imooc.security.code.image.expireIn = 30
#imooc.security.code.image.url = /user/*

#短信验证码配置项，参见SmsCodeProperties
#imooc.security.code.sms.length = 6
#imooc.security.code.sms.expireIn = 60
#imooc.security.code.sms.url = /user/*

#社交登录拦截的url，参见SocialProperties
imooc.security.social.filterProcessesUrl = /login

#QQ登录配置，参见QQProperties
imooc.security.social.qq.app-id = 101494282
imooc.security.social.qq.app-secret = 2982e311adc721c9081582c6fae59314
imooc.security.social.qq.providerId = qq

#微信登录配置，参见WeinxinProperties
imooc.security.social.weixin.app-id = wxd99431bbff8305a0
imooc.security.social.weixin.app-secret = 60f78681d063590a469f1b297feff3c4
imooc.security.social.weixin.providerId = weixin